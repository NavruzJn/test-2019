enum RoleType {
  user
  support
}

type User {
  id: ID!
  email: String!
  profile: Profile
  registeredAt: DateTime
  lastLogonAt: DateTime
}

type AcessToken {
  expiresIn: Int!,
  accessToken: String!,
  user: User,
  status: Int!,
}

type Profile {
  firstName: String!
  lastName: String!
}

type RegisterUserErrors {
  email: String
  password: String
}

type RegisterUserResponse {
  email: String
  password: String
}

type UpdateProfileErrors {
  firstName: String
  lastName: String
}

type UpdateProfileResponse {
  errors: UpdateProfileErrors
}


type UserList {
  rows: [User]!
  count: Int!
}

type Mutation {
  register (input: RegisterUserInput!) : AcessToken!
  updateProfile (input: UpdateProfileInput!) : User!
}

type Query {
  me: User!
  login (input: LoginInput!) : AcessToken!
  user (id: ID!) : User!
  users : UserList!
}

input RegisterUserInput {
  email: String!
  password: String!
  roleType: RoleType!
}

input LoginInput {
  email: String!
  password: String!
}

input UpdateProfileInput {
  firstName: String!
  lastName: String!
}


